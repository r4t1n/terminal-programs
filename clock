#!/usr/bin/env python3

import argparse, time

parser = argparse.ArgumentParser(description="Display local time")
parser.add_argument("-c", "--color", type=str, default="blue", help="Colors: blue, cyan, green, purple, red, yellow (default: blue)")
parser.add_argument("-f", "--format", default="%A %Y-%m-%d %H:%M:%S", help="Time format (default: %A %Y-%m-%d %H:%M:%S)")
parser.add_argument("-r", "--refresh", type=float, default=1, help="Refresh time in seconds (default: 1)")
args = parser.parse_args()

class color:
    blue = "\033[1;34;48m"
    cyan = "\033[1;36;48m"
    green = "\033[1;32;48m"
    purple = "\033[1;35;48m"
    red = "\033[1;31;48m"
    yellow = "\033[1;33;48m"
    end = "\033[1;37;0m"

def print_time(local_time):
    print("\033[K", end="")
    color_attribute = getattr(color, args.color)
    print("  ", color_attribute, "Local time:" + color.end, local_time, end="\r", flush=True)

def main():
    try:
        while True:
            local_time = time.strftime(args.format, time.localtime())
            print_time(local_time)
            time.sleep(args.refresh)

    except KeyboardInterrupt:
        print("") # Use print instead of pass to keep the time on the terminal after exiting

if __name__ == "__main__":
    main()
